(((name . find)
  (signature lambda ((procedure? pred) (list? list)) *)
  (tags pure)
  (subsigs (pred (lambda (obj) *))))
 ((name . for-all)
  (signature lambda ((procedure? pred) (list? list1) (list? list2) ...) *)
  (tags pure)
  (subsigs (pred (lambda (obj1 obj2 ...) *))))
 ((name . exists)
  (signature lambda ((procedure? pred) (list? list1) (list? list2) ...) *)
  (tags pure)
  (subsigs (pred (lambda (obj1 obj2 ...) *))))
 ((name . filter)
  (signature lambda ((procedure? pred) (list? list)) list?)
  (tags pure)
  (subsigs (pred (lambda (obj) *))))
 ((name . partition)
  (signature lambda ((procedure? pred) (list? list)) (values list? list?))
  (tags pure)
  (subsigs (pred (lambda (obj) *))))
 ((name . fold-left)
  (signature
   lambda
   ((procedure? kons) knil (list? list1) (list? list2) ...)
   *)
  (tags pure)
  (subsigs (kons (lambda (obj1 obj2 ... fold-state) *))))
 ((name . fold-right)
  (signature
   lambda
   ((procedure? kons) knil (list? list1) (list? list2) ...)
   *)
  (tags pure)
  (subsigs (kons (lambda (obj1 obj2 ... fold-state) *))))
 ((name . remp)
  (signature lambda ((procedure? pred) (list? list)) list?)
  (tags pure)
  (subsigs (pred (lambda (obj) *))))
 ((name . remove)
  (signature lambda (obj (list? list)) list?)
  (tags pure))
 ((name . remv)
  (signature lambda (obj (list? list)) list?)
  (tags pure))
 ((name . remq)
  (signature lambda (obj (list? list)) list?)
  (tags pure))
 ((name . memp)
  (signature lambda ((procedure? pred) (list? list)) (or #f list?))
  (tags pure)
  (subsigs (pred (lambda (obj) *))))
 ((name . member)
  (signature lambda (obj (list? list)) (or #f list?))
  (tags pure))
 ((name . memq)
  (signature lambda (obj (list? list)) (or #f list?))
  (tags pure))
 ((name . memv)
  (signature lambda (obj (list? list)) (or #f list?))
  (tags pure))
 ((name . assp)
  (signature lambda ((procedure? pred) (list? alist)) (or pair? #f))
  (tags pure)
  (subsigs (pred (lambda (obj) *))))
 ((name . assoc)
  (signature lambda (obj (list? alist)) (or pair? #f))
  (tags pure))
 ((name . assq)
  (signature lambda (obj (list? alist)) (or pair? #f))
  (tags pure))
 ((name . assv)
  (signature lambda (obj (list? alist)) (or pair? #f))
  (tags pure))
 ((name . cons*) (signature lambda (elt1 elt2 ...) *)))
