(((name . "ephemeron?")
  (signature lambda (object) boolean?)
  (tags pure predicate)
  (desc . "Returns #t if object is an ephemeron; otherwise returns #f."))
 ((name . "make-ephemeron")
  (signature lambda (key datum) ephemeron?)
  (desc . "Returns a newly allocated ephemeron, with components key and datum. Note that if key and datum are the same in the sense of eq?, the ephemeron is effectively a weak reference to the object."))
 ((name . "ephemeron-broken?")
  (signature lambda ((ephemeron? ephemeron)) boolean?)
  (desc . " Returns #t if ephemeron has been broken; otherwise returns #f.
This procedure must be used with care. If it returns #f, that guarantees only that prior evaluations of ephemeron-key or ephemeron-datum yielded the key or datum that was stored in ephemeron. However, it makes no guarantees about subsequent calls to ephemeron-key or ephemeron-datum, because the GC may run and break the ephemeron immediately after ephemeron-broken? returns."))
 ((name . "ephemeron-key")
  (signature lambda ((ephemeron? ephemeron)) *)
  (desc . "(shared description for ephemeron-key, ephemeron-datum) These return the key or datum component, respectively, of ephemeron. If ephemeron has been broken, these operations return #f, but they can also return #f if that is what was stored as the key or datum."))
 ((name . "ephemeron-datum")
  (signature lambda ((ephemeron? ephemeron)) *)
  (desc . "(shared description for ephemeron-key, ephemeron-datum) These return the key or datum component, respectively, of ephemeron. If ephemeron has been broken, these operations return #f, but they can also return #f if that is what was stored as the key or datum."))
 ((name . "reference-barrier")
  (signature lambda (key) *)
  (desc . "This procedure ensures that the garbage collector does not break an ephemeron containing an unreferenced key before a certain point in a program. The program can invoke a reference barrier on the key by calling this procedure, which guarantees that even if the program does not use the key, it will be considered strongly reachable until after reference-barrier returns.
Because one cannot reliably operate on ephemerons in a portable way without calling the procedure reference-barrier, reference-barrier is mandatory.")))
