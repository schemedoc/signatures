(((name . "record?")
  (signature lambda (obj) boolean?)
  (tags pure)
  (desc . "Returns #t if obj is a record, and its record type is not opaque, and returns #f otherwise."))
 ((name . "record-rtd")
  (signature lambda ((record? record)) record-type-descriptor?)
  (tags pure)
  (desc . "Returns the rtd representing the type of record if the type is not opaque. The rtd of the most precise type is returned; that is, the type t such that record is of type t but not of any type that extends t. If the type is opaque, an exception is raised with condition type &assertion."))
 ((name . "record-type-name")
  (signature lambda ((record-type-descriptor? rtd)) symbol?)
  (tags pure)
  (desc . "Returns the name of the record-type descriptor rtd."))
 ((name . "record-type-parent")
  (signature
   lambda
   ((record-type-descriptor? rtd))
   (or #f record-type-descriptor?))
  (tags pure)
  (desc . "Returns the parent of the record-type descriptor rtd, or #f if it has none."))
 ((name . "record-type-uid")
  (signature lambda ((record-type-descriptor? rtd)) (or symbol? #f))
  (tags pure)
  (desc . "Returns the uid of the record-type descriptor rtd, or #f if it has none. (An implementation may assign a generated uid to a record type even if the type is generative, so the return of a uid does not necessarily imply that the type is nongenerative.)"))
 ((name . "record-type-generative?")
  (signature lambda ((record-type-descriptor? rtd)) boolean?)
  (tags pure)
  (desc . "Returns #t if rtd is generative, and #f if not."))
 ((name . "record-type-sealed?")
  (signature lambda ((record-type-descriptor? rtd)) boolean?)
  (tags pure)
  (desc . "Returns #t if the record-type descriptor is sealed, and #f if not."))
 ((name . "record-type-opaque?")
  (signature lambda ((record-type-descriptor? rtd)) boolean?)
  (tags pure)
  (desc . "Returns #t if the the record-type descriptor is opaque, and #f if not."))
 ((name . "record-type-field-names")
  (signature lambda ((record-type-descriptor? rtd)) vector?)
  (tags pure)
  (desc . "Returns a vector of symbols naming the fields of the type represented by rtd (not including the fields of parent types) where the fields are ordered as described under make-record-type-descriptor. The returned vector may be immutable. If the returned vector is modified, the effect on rtd is unspecified."))
 ((name . "record-field-mutable?")
  (signature lambda ((record-type-descriptor? rtd) (integer? k)) boolean?)
  (tags pure)
  (desc . "Returns #t if the field specified by k of the type represented by rtd is mutable, and #f if not. K is as in record-accessor.")))
