(((name . "ubox")
  (signature lambda (value) ubox?)
  (tags pure)
  (desc . "Constructor. Returns a newly allocated unifiable box initialized to value. The new unifiable box is not equal to any previously constructed unifiable box."))
 ((name . "ubox?")
  (signature lambda (object) boolean?)
  (tags pure)
  (desc . "Predicate. Returns #t if object is a unifiable box, and #f otherwise."))
 ((name . "ubox-ref")
  (signature lambda ((ubox? ubox)) *)
  (tags pure)
  (desc . "Accessor. Returns the current value of the unifiable box ubox."))
 ((name . "ubox-set!")
  (signature lambda ((ubox? ubox) value) undefined)
  (desc . "Mutator. Changes the unifiable box ubox to hold value. The return value is unspecified."))
 ((name . "ubox=?")
  (signature lambda ((ubox? ubox1) (ubox? ubox2)) boolean?)
  (tags pure)
  (desc . "Equality predicate. Returns #t if ubox1 and ubox2 are equal unifiable boxes, and #f otherwise."))
 ((name . "ubox-unify!")
  (signature lambda ((procedure? proc) (ubox? ubox1) (ubox? ubox2)) undefined)
  (subsigs
    (proc (lambda (value1 value2) *)))
  (desc . "Union operation. Invokes proc on the values of ubox1 and ubox2, makes ubox1 and ubox2 equal, and updates their value to the result of the invocation of proc. The return value is unspecified."))
 ((name . "ubox-union!")
  (signature lambda ((ubox? ubox1) (ubox? ubox2)) undefined)
  (desc . "Union operation. Makes the unifiable boxes ubox1 and ubox2 equal. The value of the unified box is the value of either ubox1 or ubox2 before the unification. The return value is unspecified."))
 ((name . "ubox-link!")
  (signature lambda ((ubox? ubox1) (ubox? ubox2)) undefined)
  (desc . "Union operation. Makes the unifiable boxes ubox1 and ubox2 equal. The value of the unified box is the value of ubox2 before the unification. The return value is unspecified.")))
