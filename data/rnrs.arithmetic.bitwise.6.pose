(((name . "bitwise-not")
  (signature lambda ((integer? ei)) integer?)
  (tags pure)
  (desc . "Returns the exact integer object whose two's complement representation is the one's complement of the two's complement representation of ei."))
 ((name . "bitwise-and")
  (signature lambda ((integer? i) ...) integer?)
  (tags pure)
  (desc . "This procedure returns the exact integer object that is the bit-wise \"and\" of the two's complement representations of its arguments. If it is passed only one argument, it returns that argument. If it is passed no arguments, it returns -1 that acts as identity for the operation."))
 ((name . "bitwise-ior")
  (signature lambda ((integer? i) ...) integer?)
  (tags pure)
  (desc . "This procedure returns the exact integer object that is the bit-wise \"inclusive-or\" of the two's complement representations of its arguments. If it is passed only one argument, it returns that argument. If it is passed no arguments, it returns 0 that acts as identity for the operation."))
 ((name . "bitwise-xor")
  (signature lambda ((integer? i) ...) integer?)
  (tags pure)
  (desc . "This procedure returns the exact integer object that is the bit-wise \"exclusive-or\" of the two's complement representations of its arguments. If it is passed only one argument, it returns that argument. If it is passed no arguments, it returns 0 that acts as identity for the operation."))
 ((name . "bitwise-if")
  (signature lambda ((integer? ei1) (integer? ei2) (integer? ei3)) integer?)
  (tags pure)
  (desc . "Returns the exact integer object that is the bit-wise \"if\" of the two's complement representations of its arguments, i.e. for each bit, if it is 1 in ei1, the corresponding bit in ei2 becomes the value of the corresponding bit in the result, and if it is 0, the corresponding bit in ei3 becomes the corresponding bit in the value of the result. This is the result of the following computation:
(bitwise-ior (bitwise-and ei1 ei2) (bitwise-and (bitwise-not ei1) ei3))"))
 ((name . "bitwise-bit-count")
  (signature lambda ((integer? ei)) integer?)
  (tags pure)
  (desc . "If ei is non-negative, this procedure returns the number of 1 bits in the two's complement representation of ei. Otherwise it returns the result of the following computation:
(bitwise-not (bitwise-bit-count (bitwise-not ei)))"))
 ((name . "bitwise-length")
  (signature lambda ((integer? ei)) integer?)
  (tags pure)
  (desc . "Returns the number of bits needed to represent ei if it is positive, and the number of bits needed to represent (bitwise-not ei) if it is negative."))
 ((name . "bitwise-first-bit-set")
  (signature lambda ((integer? ei)) integer?)
  (tags pure)
  (desc . "Returns the index of the least significant 1 bit in the two's complement representation of ei. If ei is 0, then −1 is returned."))
 ((name . "bitwise-bit-set?")
  (signature lambda ((integer? ei1) (integer? ei2)) boolean?)
  (tags pure)
  (desc . "Ei2 must be non-negative. The bitwise-bit-set? procedure returns #t if the ei2th bit is 1 in the two's complement representation of ei1, and #f otherwise."))
 ((name . "bitwise-copy-bit")
  (signature lambda ((integer? ei1) (integer? ei2) (integer? ei3)) integer?)
  (tags pure)
  (desc . "Ei2 must be non-negative, and ei3 must be either 0 or 1. The bitwise-copy-bit procedure returns the result of replacing the ei2th bit of ei1 by the ei2th bit of ei3"))
 ((name . "bitwise-bit-field")
  (signature lambda ((integer? ei1) (integer? ei2) (integer? ei3)) integer?)
  (tags pure)
  (desc . "Ei2 and ei3 must be non-negative, and ei2 must be less than or equal to ei3. The bitwise-bit-field procedure returns the number represented by the bits at the positions from ei2 (inclusive) to ei3 (exclusive)"))
 ((name . "bitwise-copy-bit-field")
  (signature
   lambda
   ((integer? ei1) (integer? ei2) (integer? ei3) (integer? ei4))
   integer?)
  (tags pure)
  (desc . "Ei2 and ei3 must be non-negative, and ei2 must be less than or equal to ei3. The bitwise-copy-bit-field procedure returns the result of replacing in ei1 the bits at positions from ei2 (inclusive) to ei3 (exclusive) by the corresponding bits in ei4"))
 ((name . "bitwise-arithmetic-shift")
  (signature lambda ((integer? ei1) (integer? ei2)) integer?)
  (tags pure)
  (desc . "Returns the result of the following computation:
(floor (* ei1 (expt 2 ei2)))"))
 ((name . "bitwise-arithmetic-shift-left")
  (signature lambda ((integer? ei1) (integer? ei2)) integer?)
  (tags pure)
  (desc . "Ei2 must be non-negative. The bitwise-arithmetic-shift-left procedure returns the same result as bitwise-arithmetic-shift"))
 ((name . "bitwise-arithmetic-shift-right")
  (signature lambda ((integer? ei1) (integer? ei2)) integer?)
  (tags pure)
  (desc . "Ei2 must be non-negative. The bitwise-arithmetic-shift-left procedure returns the same result as (bitwise-arithmetic-shift ei1 (- ei2))"))
 ((name . "bitwise-rotate-bit-field")
  (signature
   lambda
   ((integer? ei1) (integer? ei2) (integer? ei3) (integer? ei4))
   integer?)
  (tags pure)
  (desc . "Ei2, ei3, ei4 must be non-negative, ei2 must be less than or equal to ei3, and ei4 must be non-negative. procedure returns the result of cyclically permuting in ei1 the bits at positions from ei2 (inclusive) to ei3 (exclusive) by ei4 bits towards the more significant bits"))
 ((name . "bitwise-reverse-bit-field")
  (signature lambda ((integer? ei1) (integer? ei2) (integer? ei3)) integer?)
  (tags pure)
  (desc . "Ei2 and ei3 must be non-negative, and ei2 must be less than or equal to ei3. The bitwise-reverse-bit-field procedure returns the result obtained from ei1 by reversing the order of the bits at positions from ei2 (inclusive) to ei3 (exclusive).")))
