(((name . list-sorted?)
  (signature lambda ((procedure? <) (list? lis)) boolean?)
  (tags pure)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-sorted?)
  (signature lambda ((procedure? <) (vector? v)) boolean?)
  (tags pure)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-sorted?)
  (signature lambda ((procedure? <) (vector? v) (integer? start)) boolean?)
  (tags pure)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-sorted?)
  (signature
   lambda
   ((procedure? <) (vector? v) (integer? start) (integer? end))
   boolean?)
  (tags pure)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . list-sort)
  (signature lambda ((procedure? <) (list? lis)) list?)
  (tags pure)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . list-stable-sort)
  (signature lambda ((procedure? <) (list? lis)) list?)
  (tags pure)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . list-sort!)
  (signature lambda ((procedure? <) (list? lis)) list?)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . list-stable-sort!)
  (signature lambda ((procedure? <) (list? lis)) list?)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-sort)
  (signature lambda ((procedure? <) (vector? v)) boolean?)
  (tags pure)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-sort)
  (signature lambda ((procedure? <) (vector? v) (integer? start)) boolean?)
  (tags pure)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-sort)
  (signature
   lambda
   ((procedure? <) (vector? v) (integer? start) (integer? end))
   boolean?)
  (tags pure)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-stable-sort)
  (signature lambda ((procedure? <) (vector? v)) boolean?)
  (tags pure)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-stable-sort)
  (signature lambda ((procedure? <) (vector? v) (integer? start)) boolean?)
  (tags pure)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-stable-sort)
  (signature
   lambda
   ((procedure? <) (vector? v) (integer? start) (integer? end))
   boolean?)
  (tags pure)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-sort!)
  (signature lambda ((procedure? <) (vector? v)) boolean?)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-sort!)
  (signature lambda ((procedure? <) (vector? v) (integer? start)) boolean?)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-sort!)
  (signature
   lambda
   ((procedure? <) (vector? v) (integer? start) (integer? end))
   boolean?)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-stable-sort!)
  (signature lambda ((procedure? <) (vector? v)) boolean?)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-stable-sort!)
  (signature lambda ((procedure? <) (vector? v) (integer? start)) boolean?)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-stable-sort!)
  (signature
   lambda
   ((procedure? <) (vector? v) (integer? start) (integer? end))
   boolean?)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . list-merge)
  (signature lambda ((procedure? <) (list? lis1) (list? lis2)) list?)
  (tags pure)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . list-merge!)
  (signature lambda ((procedure? <) (list? lis1) (list? lis2)) list?)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-merge)
  (signature lambda ((procedure? <) (vector? v1) (vector? v2)) vector?)
  (tags pure)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-merge)
  (signature
   lambda
   ((procedure? <) (vector? v1) (vector? v2) (integer? start1))
   vector?)
  (tags pure)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-merge)
  (signature
   lambda
   ((procedure? <) (vector? v1) (vector? v2) (integer? start1) (integer? end1))
   vector?)
  (tags pure)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-merge)
  (signature
   lambda
   ((procedure? <)
    (vector? v1)
    (vector? v2)
    (integer? start1)
    (integer? end1)
    (integer? start2))
   vector?)
  (tags pure)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-merge)
  (signature
   lambda
   ((procedure? <)
    (vector? v1)
    (vector? v2)
    (integer? start1)
    (integer? end1)
    (integer? start2)
    (integer? end2))
   vector?)
  (tags pure)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-merge!)
  (signature lambda ((procedure? <) (vector? v1) (vector? v2)) vector?)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-merge!)
  (signature
   lambda
   ((procedure? <) (vector? v1) (vector? v2) (integer? start1))
   vector?)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-merge!)
  (signature
   lambda
   ((procedure? <) (vector? v1) (vector? v2) (integer? start1) (integer? end1))
   vector?)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-merge!)
  (signature
   lambda
   ((procedure? <)
    (vector? v1)
    (vector? v2)
    (integer? start1)
    (integer? end1)
    (integer? start2))
   vector?)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-merge!)
  (signature
   lambda
   ((procedure? <)
    (vector? v1)
    (vector? v2)
    (integer? start1)
    (integer? end1)
    (integer? start2)
    (integer? end2))
   vector?)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . list-delete-neighbor-dups)
  (signature lambda ((procedure? =) (list? lis)) list?)
  (tags pure)
  (subsigs (= (lambda (obj1 obj2) boolean?))))
 ((name . list-delete-neighbor-dups!)
  (signature lambda ((procedure? =) (list? lis)) list?)
  (subsigs (= (lambda (obj1 obj2) boolean?))))
 ((name . vector-delete-neighbor-dups)
  (signature lambda ((procedure? =) (vector? v)) vector?)
  (tags pure)
  (subsigs (= (lambda (obj1 obj2) boolean?))))
 ((name . vector-delete-neighbor-dups)
  (signature lambda ((procedure? =) (vector? v) (integer? start)) vector?)
  (tags pure)
  (subsigs (= (lambda (obj1 obj2) boolean?))))
 ((name . vector-delete-neighbor-dups)
  (signature
   lambda
   ((procedure? =) (vector? v) (integer? start) (integer? end))
   vector?)
  (tags pure)
  (subsigs (= (lambda (obj1 obj2) boolean?))))
 ((name . vector-delete-neighbor-dups!)
  (signature lambda ((procedure? =) (vector? v)) vector?)
  (subsigs (= (lambda (obj1 obj2) boolean?))))
 ((name . vector-delete-neighbor-dups!)
  (signature lambda ((procedure? =) (vector? v) (integer? start)) vector?)
  (subsigs (= (lambda (obj1 obj2) boolean?))))
 ((name . vector-delete-neighbor-dups!)
  (signature
   lambda
   ((procedure? =) (vector? v) (integer? start) (integer? end))
   vector?)
  (subsigs (= (lambda (obj1 obj2) boolean?))))
 ((name . vector-find-median)
  (signature lambda ((procedure? <) (vector? v) knil) *)
  (tags pure)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-find-median)
  (signature lambda ((procedure? <) (vector? v) knil (procedure? mean)) *)
  (tags pure)
  (subsigs (< (lambda (obj1 obj2) boolean?)) (mean (lambda (obj1 obj2) *))))
 ((name . vector-find-median!)
  (signature lambda ((procedure? <) (vector? v) knil) *)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-find-median!)
  (signature lambda ((procedure? <) (vector? v) knil (procedure? mean)) *)
  (subsigs (< (lambda (obj1 obj2) boolean?)) (mean (lambda (obj1 obj2) *))))
 ((name . vector-select!)
  (signature lambda ((procedure? <) (vector? v) (integer? k)) *)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-select!)
  (signature
   lambda
   ((procedure? <) (vector? v) (integer? k) (integer? start))
   *)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-select!)
  (signature
   lambda
   ((procedure? <) (vector? v) (integer? k) (integer? start) (integer? end))
   *)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-separate!)
  (signature lambda ((procedure? <) (vector? v) (integer? k)) undefined)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-separate!)
  (signature
   lambda
   ((procedure? <) (vector? v) (integer? k) (integer? start))
   undefined)
  (subsigs (< (lambda (obj1 obj2) boolean?))))
 ((name . vector-separate!)
  (signature
   lambda
   ((procedure? <) (vector? v) (integer? k) (integer? start) (integer? end))
   undefined)
  (subsigs (< (lambda (obj1 obj2) boolean?)))))
