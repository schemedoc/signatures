(((name . hashmap)
  (signature lambda ((comparator? comparator) arg ...) hashmap?)
  (tags pure))
 ((name . hashmap-unfold)
  (signature
   lambda
   ((procedure? stop?)
    (procedure? mapper)
    (procedure? successor)
    seed
    (comparator? comparator))
   hashmap?)
  (tags pure)
  (subsigs
   (stop? (lambda (seed) boolean?))
   (mapper (lambda (seed) (values * *)))
   (successor (lambda (seed) *))))
 ((name . hashmap?) (signature lambda (obj) boolean?) (tags pure predicate))
 ((name . hashmap-contains?)
  (signature lambda ((hashmap? hashmap) key) boolean?)
  (tags pure))
 ((name . hashmap-empty?)
  (signature lambda ((hashmap? hashmap)) boolean?)
  (tags pure))
 ((name . hashmap-disjoint?)
  (signature lambda ((hashmap? hashmap1) (hashmap? hashmap2)) boolean?)
  (tags pure))
 ((name . hashmap-ref)
  (signature lambda ((hashmap? hashmap) key) *)
  (tags pure))
 ((name . hashmap-ref)
  (signature lambda ((hashmap? hashmap) key (procedure? failure)) *)
  (tags pure)
  (subsigs (failure (lambda () *))))
 ((name . hashmap-ref)
  (signature
   lambda
   ((hashmap? hashmap) key (procedure? failure) (procedure? success))
   *)
  (tags pure)
  (subsigs (failure (lambda () *)) (success (lambda (value) *))))
 ((name . hashmap-ref/default)
  (signature lambda ((hashmap? hashmap) key default) *)
  (tags pure))
 ((name . hashmap-key-comparator)
  (signature lambda ((hashmap? hashmap)) comparator?)
  (tags pure))
 ((name . hashmap-adjoin)
  (signature lambda ((hashmap? hashmap) key1 value1 ...) hashmap?)
  (tags pure))
 ((name . hashmap-adjoin!)
  (signature lambda ((hashmap? hashmap) key1 value1 ...) hashmap?))
 ((name . hashmap-set)
  (signature lambda ((hashmap? hashmap) key1 value1 ...) hashmap?)
  (tags pure))
 ((name . hashmap-set!)
  (signature lambda ((hashmap? hashmap) key1 value1 ...) hashmap?))
 ((name . hashmap-replace)
  (signature lambda ((hashmap? hashmap) key value) hashmap?)
  (tags pure))
 ((name . hashmap-replace!)
  (signature lambda ((hashmap? hashmap) key value) hashmap?))
 ((name . hashmap-delete)
  (signature lambda ((hashmap? hashmap) key ...) hashmap?)
  (tags pure))
 ((name . hashmap-delete!)
  (signature lambda ((hashmap? hashmap) key ...) hashmap?)
  (tags pure))
 ((name . hashmap-delete-all)
  (signature lambda ((hashmap? hashmap) (list? keys)) hashmap?)
  (tags pure))
 ((name . hashmap-delete-all!)
  (signature lambda ((hashmap? hashmap) (list? keys)) hashmap?))
 ((name . hashmap-intern)
  (signature
   lambda
   ((hashmap? hashmap) key (procedure? failure))
   (values hashmap? *))
  (tags pure)
  (subsigs (failure (lambda () *))))
 ((name . hashmap-intern!)
  (signature
   lambda
   ((hashmap? hashmap) key (procedure? failure))
   (values hashmap? *))
  (subsigs (failure (lambda () *))))
 ((name . hashmap-update)
  (signature lambda ((hashmap? hashmap) key (procedure? updater)) hashmap?)
  (tags pure)
  (subsigs (updater (lambda (value) *))))
 ((name . hashmap-update)
  (signature
   lambda
   ((hashmap? hashmap) key (procedure? updater) (procedure? failure))
   hashmap?)
  (tags pure)
  (subsigs (updater (lambda (value) *)) (failure (lambda () *))))
 ((name . hashmap-update)
  (signature
   lambda
   ((hashmap? hashmap)
    key
    (procedure? updater)
    (procedure? failure)
    (procedure? success))
   hashmap?)
  (tags pure)
  (subsigs
   (updater (lambda (value) *))
   (failure (lambda () *))
   (success (lambda (value) *))))
 ((name . hashmap-update!)
  (signature lambda ((hashmap? hashmap) key (procedure? updater)) hashmap?)
  (subsigs (updater (lambda (value) *))))
 ((name . hashmap-update!)
  (signature
   lambda
   ((hashmap? hashmap) key (procedure? updater) (procedure? failure))
   hashmap?)
  (subsigs (updater (lambda (value) *)) (failure (lambda () *))))
 ((name . hashmap-update!)
  (signature
   lambda
   ((hashmap? hashmap)
    key
    (procedure? updater)
    (procedure? failure)
    (procedure? success))
   hashmap?)
  (subsigs
   (updater (lambda (value) *))
   (failure (lambda () *))
   (success (lambda (value) *))))
 ((name . hashmap-update/default)
  (signature
   lambda
   ((hashmap? hashmap) key (procedure? updater) default)
   hashmap?)
  (tags pure)
  (subsigs (updater (lambda (value) *))))
 ((name . hashmap-update!/default)
  (signature
   lambda
   ((hashmap? hashmap) key (procedure? updater) default)
   hashmap?)
  (subsigs (updater (lambda (value) *))))
 ((name . hashmap-pop)
  (signature lambda ((hashmap? hashmap)) (values hashmap? * *))
  (tags pure))
 ((name . hashmap-pop)
  (signature
   lambda
   ((hashmap? hashmap) (procedure? failure))
   (values hashmap? * *))
  (tags pure)
  (subsigs (failure (lambda () (values hashmap? * *)))))
 ((name . hashmap-pop!)
  (signature lambda ((hashmap? hashmap)) (values hashmap? * *)))
 ((name . hashmap-pop!)
  (signature
   lambda
   ((hashmap? hashmap) (procedure? failure))
   (values hashmap? * *))
  (subsigs (failure (lambda () (values hashmap? * *)))))
 ((name . hashmap-search)
  (signature
   lambda
   ((hashmap? hashmap) key (procedure? failure) (procedure? success))
   (values hashmap? *))
  (tags pure)
  (subsigs
   (failure (lambda ((procedure? insert) (procedure? ignore)) *))
   (insert (lambda (value obj) *))
   (ignore (lambda (obj) *))
   (success (lambda (key value (procedure? update) (procedure? remove)) *))
   (update (lambda (new-key new-value obj) *))
   (remove (lambda (obj) *))))
 ((name . hashmap-search!)
  (signature
   lambda
   ((hashmap? hashmap) key (procedure? failure) (procedure? success))
   (values hashmap? *))
  (subsigs
   (failure (lambda ((procedure? insert) (procedure? ignore)) *))
   (insert (lambda (value obj) *))
   (ignore (lambda (obj) *))
   (success (lambda (key value (procedure? update) (procedure? remove)) *))
   (update (lambda (new-key new-value obj) *))
   (remove (lambda (obj) *))))
 ((name . hashmap-size)
  (signature lambda ((hashmap? hashmap)) integer?)
  (tags pure))
 ((name . hashmap-find)
  (signature
   lambda
   ((procedure? predicate) (hashmap? hashmap) (procedure? failure))
   (values * *))
  (tags pure)
  (subsigs (predicate (lambda (key value) boolean?)) (failure (lambda () *))))
 ((name . hashmap-count)
  (signature lambda ((procedure? predicate) (hashmap? hashmap)) integer?)
  (tags pure)
  (subsigs (predicate (lambda (key value) boolean?))))
 ((name . hashmap-any?)
  (signature lambda ((procedure? predicate) (hashmap? hashmap)) boolean?)
  (tags pure)
  (subsigs (predicate (lambda (key value) boolean?))))
 ((name . hashmap-every?)
  (signature lambda ((procedure? predicate) (hashmap? hashmap)) boolean?)
  (tags pure)
  (subsigs (predicate (lambda (key value) boolean?))))
 ((name . hashmap-keys)
  (signature lambda ((hashmap? hashmap)) list?)
  (tags pure))
 ((name . hashmap-values)
  (signature lambda ((hashmap? hashmap)) list?)
  (tags pure))
 ((name . hashmap-entries)
  (signature lambda ((hashmap? hashmap)) (values list? list?))
  (tags pure))
 ((name . hashmap-map)
  (signature
   lambda
   ((procedure? proc) (comparator? comparator) (hashmap? hashmap))
   hashmap?)
  (tags pure)
  (subsigs (proc (lambda (key value) (values * *)))))
 ((name . hashmap-for-each)
  (signature
   lambda
   ((procedure? proc) (comparator? comparator) (hashmap? hashmap))
   undefined)
  (subsigs (proc (lambda (key value) undefined))))
 ((name . hashmap-fold)
  (signature lambda ((procedure? proc) nil (hashmap? hashmap)) *)
  (tags pure)
  (subsigs (proc (lambda (key value state) *))))
 ((name . hashmap-map->list)
  (signature lambda ((procedure? proc) (hashmap? hashmap)) list?)
  (tags pure)
  (subsigs (proc (lambda (key value) *))))
 ((name . hashmap-filter)
  (signature lambda ((procedure? predicate) (hashmap? hashmap)) hashmap?)
  (tags pure)
  (subsigs (predicate (lambda (key value) boolean?))))
 ((name . hashmap-filter!)
  (signature lambda ((procedure? predicate) (hashmap? hashmap)) hashmap?)
  (subsigs (predicate (lambda (key value) boolean?))))
 ((name . hashmap-remove)
  (signature lambda ((procedure? predicate) (hashmap? hashmap)) hashmap?)
  (tags pure)
  (subsigs (predicate (lambda (key value) boolean?))))
 ((name . hashmap-remove!)
  (signature lambda ((procedure? predicate) (hashmap? hashmap)) hashmap?)
  (subsigs (predicate (lambda (key value) boolean?))))
 ((name . hashmap-partition)
  (signature
   lambda
   ((procedure? predicate) (hashmap? hashmap))
   (values hashmap? hashmap?))
  (tags pure)
  (subsigs (predicate (lambda (key value) boolean?))))
 ((name . hashmap-partition!)
  (signature
   lambda
   ((procedure? predicate) (hashmap? hashmap))
   (values hashmap? hashmap?))
  (subsigs (predicate (lambda (key value) boolean?))))
 ((name . hashmap-copy)
  (signature lambda ((hashmap? hashmap)) hashmap?)
  (tags pure))
 ((name . hashmap->alist)
  (signature lambda ((hashmap? hashmap)) list?)
  (tags pure))
 ((name . alist->hashmap)
  (signature lambda ((comparator? comparator) (list? alist)) hashmap?)
  (tags pure))
 ((name . alist->hashmap!)
  (signature lambda ((hashmap? hashmap) (list? alist)) hashmap?))
 ((name . hashmap=?)
  (signature
   lambda
   ((comparator? comparator) (hashmap? hashmap1) (hashmap? hashmap2) ...)
   boolean?)
  (tags pure))
 ((name . hashmap<?)
  (signature
   lambda
   ((comparator? comparator) (hashmap? hashmap1) (hashmap? hashmap2) ...)
   boolean?)
  (tags pure))
 ((name . hashmap>?)
  (signature
   lambda
   ((comparator? comparator) (hashmap? hashmap1) (hashmap? hashmap2) ...)
   boolean?)
  (tags pure))
 ((name . hashmap<=?)
  (signature
   lambda
   ((comparator? comparator) (hashmap? hashmap1) (hashmap? hashmap2) ...)
   boolean?)
  (tags pure))
 ((name . hashmap>=?)
  (signature
   lambda
   ((comparator? comparator) (hashmap? hashmap1) (hashmap? hashmap2) ...)
   boolean?)
  (tags pure))
 ((name . hashmap-union)
  (signature lambda ((hashmap? hashmap1) (hashmap? hashmap2) ...) hashmap?)
  (tags pure))
 ((name . hashmap-intersection)
  (signature lambda ((hashmap? hashmap1) (hashmap? hashmap2) ...) hashmap?)
  (tags pure))
 ((name . hashmap-difference)
  (signature lambda ((hashmap? hashmap1) (hashmap? hashmap2) ...) hashmap?)
  (tags pure))
 ((name . hashmap-xor)
  (signature lambda ((hashmap? hashmap1) (hashmap? hashmap2)) hashmap?)
  (tags pure))
 ((name . hashmap-union!)
  (signature lambda ((hashmap? hashmap1) (hashmap? hashmap2) ...) hashmap?))
 ((name . hashmap-intersection!)
  (signature lambda ((hashmap? hashmap1) (hashmap? hashmap2) ...) hashmap?))
 ((name . hashmap-difference!)
  (signature lambda ((hashmap? hashmap1) (hashmap? hashmap2) ...) hashmap?))
 ((name . hashmap-xor!)
  (signature lambda ((hashmap? hashmap1) (hashmap? hashmap2)) hashmap?)))
