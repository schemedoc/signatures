(
 ((group
    ((name . "exact->inexact")
     (signature lambda ((number? z)) inexact?)
     (tags pure))
    ((name . "inexact->exact")
     (signature lambda ((number? z)) exact?)
     (tags pure)))
  (desc . "These are the same as the inexact and exact procedures"))
 ((group
    ((name . "quotient")
     (signature lambda ((integer? n1) (integer? n2)) integer?)
     (tags pure))
    ((name . "remainder")
     (signature lambda ((integer? n1) (integer? n2)) integer?)
     (tags pure))
    ((name . "modulo")
     (signature lambda ((integer? n1) (integer? n2)) integer?)
     (tags pure)))
  (desc . "These procedures implement number-theoretic (integer) division. N2 must be non-zero."))
 ((name . "delay") 
  (signature syntax-rules () ((_ expression) promise?))
  (desc . "The delay construct is used together with the procedure force to implement lazy evaluation or call by need. (delay <expression>) returns an object called a promise which at some point in the future may be asked (by the force procedure) to evaluate <expression>, and deliver the resulting value. The effect of <expression> returning multiple values is unspecified."))
 ((name . "force") 
  (signature lambda ((promise? promise)) *)
  (desc . "Promise must be a promise. The force procedure forces the value of promise. If no value has been computed for the promise, then a value is computed and returned. The value of the promise is cached (or “memoized”) so that if it is forced a second time, the previously computed value is returned."))
 ((name . "null-environment")
  (signature
   case-lambda
   (((integer? n)) environment)
   (((integer? n)) environment))
  (tags pure)
  (desc . "N must be the exact integer object 5. The null-environment procedure returns an environment specifier suitable for use with eval (see chapter 16) representing an environment that is empty except for the (syntactic) bindings for all keywords described in the previous revision of this report, including bindings for =>, ..., else, and _ that are the same as those in the (rnrs base (6)) library."))
 ((name . "scheme-report-environment")
  (signature lambda ((integer? n)) environment)
  (tags pure)
  (desc . "N must be the exact integer object 5. The scheme-report-environment procedure returns an environment specifier for an environment that is empty except for the bindings for the identifiers described in the previous revision of this report, omitting load, interaction-environment, transcript-on, transcript-off, and char-ready?. The variable bindings have as values the procedures of the same names described in this report, and the keyword bindings, including =>, ..., else, and _ are the same as those described in this report.")))
